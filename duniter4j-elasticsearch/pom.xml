<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.duniter</groupId>
    <artifactId>duniter4j</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <groupId>org.duniter</groupId>
  <artifactId>duniter4j-elasticsearch</artifactId>
  <packaging>jar</packaging>
  <name>Duniter4j :: ElasticSearch Plugin</name>

  <properties>
    <!-- bundle configuration -->
    <bundlePrefix>duniter4j-elasticsearch-${project.version}</bundlePrefix>

    <!-- i18n configuration -->
    <i18n.bundleOutputName>duniter4j-elasticsearch-i18n</i18n.bundleOutputName>
    <i18n.generateCsvFile>true</i18n.generateCsvFile>
    <i18n.bundleCsvFile>
      ${maven.gen.dir}/resources/META-INF/${i18n.bundleOutputName}.csv
    </i18n.bundleCsvFile>
    <config.i18nBundleName>${i18n.bundleOutputName}</config.i18nBundleName>

    <!--maven.jar.main.class>
      org.duniter.elasticsearch.cli.Main
    </maven.jar.main.class-->
    <maven.jar.main.class>
      org.elasticsearch.bootstrap.Elasticsearch
    </maven.jar.main.class>
    <exec.classpathScope>provided</exec.classpathScope>

    <duniter4j-elasticsearch.config>${project.basedir}/src/test/resources/duniter4j-elasticsearch-test.properties</duniter4j-elasticsearch.config>

    <cesium.download.url>https://github.com/duniter/cesium/releases/download/${cesium.version}/cesium-web-${cesium.version}.zip</cesium.download.url>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.duniter</groupId>
      <artifactId>duniter4j-core-client</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- LOGGING DEPENDENCIES - SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>

    <!-- Elastic Search -->
    <dependency>
      <groupId>org.elasticsearch</groupId>
      <artifactId>elasticsearch</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>

    <!-- JNA (need for OS shutdown hook) -->
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna-platform</artifactId>
      <exclusions>
        <exclusion>
          <groupId>net.java.dev.jna</groupId>
          <artifactId>jna</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Unit test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.config</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <useUniqueVersions>false</useUniqueVersions>
              <addClasspath>true</addClasspath>
              <classpathPrefix>./lib/</classpathPrefix>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.nuiton.i18n</groupId>
        <artifactId>i18n-maven-plugin</artifactId>

        <executions>
          <execution>
            <id>scan-sources</id>
            <configuration>
              <entries>
                <entry>
                  <specificGoal>parserValidation</specificGoal>
                  <basedir>${maven.src.dir}/main/java/</basedir>
                  <includes>
                    <param>**/**-validation.xml</param>
                  </includes>
                </entry>
              </entries>
            </configuration>
            <goals>
              <goal>parserJava</goal>
              <goal>parserValidation</goal>
              <goal>gen</goal>
            </goals>
          </execution>
          <execution>
            <id>make-bundle</id>
            <goals>
              <goal>bundle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
      <profile>
      <id>default-bundle</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-dependencies</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.elasticsearch.distribution.zip</groupId>
                      <artifactId>elasticsearch</artifactId>
                      <version>${elasticsearch.version}</version>
                      <type>zip</type>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <silent>true</silent>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>download-attachment-mapper-plugin</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- download file -->
                    <get src="https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/mapper-attachments/${elasticsearch.version}/mapper-attachments-${elasticsearch.version}.zip"
                         dest="${project.build.directory}/mapper-attachments-${elasticsearch.version}.zip"
                         verbose="false"
                         usetimestamp="true"/>
                    <unzip src="${project.build.directory}/mapper-attachments-${elasticsearch.version}.zip"
                           dest="${project.build.directory}/elasticsearch-${elasticsearch.version}/plugins/mapper-attachments"
                           overwrite="true">

                    </unzip>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>assembly-plugin</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                  <appendAssemblyId>false</appendAssemblyId>
                  <finalName>${bundlePrefix}</finalName>
                  <descriptors>
                    <descriptor>
                        ${basedir}/src/main/assembly/plugin.xml
                    </descriptor>
                  </descriptors>
                </configuration>
              </execution>
              <execution>
                <id>assembly-standalone</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <attach>true</attach>
                  <finalName>${bundlePrefix}</finalName>
                  <descriptors>
                    <descriptor>
                      ${basedir}/src/main/assembly/standalone.xml
                    </descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- use this profile to run the main class -->
    <profile>
      <id>run</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>check-run</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <phase>initialize</phase>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>maven.jar.main.class</property>
                      <message>Could not find the "maven.jar.main.class"
                        required property, use
                        -Dmaven.jar.main.class=your.main.class.fqn
                      </message>
                    </requireProperty>
                  </rules>
                  <ignoreCache>true</ignoreCache>
                  <failFast>true</failFast>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-dependencies</id>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <phase>prepare-package</phase>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.elasticsearch.distribution.zip</groupId>
                      <artifactId>elasticsearch</artifactId>
                      <version>${elasticsearch.version}</version>
                      <type>zip</type>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${project.build.directory}/</outputDirectory>
                  <silent>true</silent>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/es-home/plugins/${project.artifactId}</outputDirectory>
                  <excludeArtifactIds>jna,jackson-core,log4j,elasticsearch</excludeArtifactIds>
                  <overWriteSnapshots>true</overWriteSnapshots>
                  <silent>true</silent>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>ant-contrib</groupId>
                <artifactId>ant-contrib</artifactId>
                <version>1.0b3</version>
                <exclusions>
                  <exclusion>
                    <groupId>ant</groupId>
                    <artifactId>ant</artifactId>
                  </exclusion>
                </exclusions>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>unpack-elasticsearch-binaries</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <copy todir="${es.home}">
                      <fileset dir="${project.build.directory}/elasticsearch-${elasticsearch.version}">
                      </fileset>
                    </copy>
                    <chmod perm="u+x">
                      <fileset dir="${es.home}/bin">
                        <include name="elasticsearch"/>
                      </fileset>
                    </chmod>
                    <copy todir="${es.home}/config"
                          overwrite="true"
                          filtering="true">
                      <fileset dir="${basedir}/src/main/assembly/config">
                      </fileset>
                    </copy>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>download-attachment-mapper-plugin</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>

                    <!-- download attachment plugin -->
                    <get src="https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/mapper-attachments/${elasticsearch.version}/mapper-attachments-${elasticsearch.version}.zip"
                         dest="${project.build.directory}/mapper-attachments-${elasticsearch.version}.zip"
                         verbose="false"
                         usetimestamp="true"/>
                    <unzip src="${project.build.directory}/mapper-attachments-${elasticsearch.version}.zip"
                           dest="${es.home}/plugins/mapper-attachments"
                           overwrite="true">
                    </unzip>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>download-cesium</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>

                    <!-- download cesium >
                    <get src="${cesium.download.url}"
                         dest="${project.build.directory}/cesium-web-${cesium.version}.zip"
                         verbose="false"
                         usetimestamp="true"/>
                    <unzip src="${project.build.directory}/cesium-web-${cesium.version}.zip"
                           dest="${duniter4j.plugin.directory}/_site"
                           overwrite="true">
                    </unzip-->
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>install-duniter-plugin</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <!-- Copy descriptor file and security files -->
                    <copy todir="${duniter4j.plugin.directory}"
                          filtering="true">
                      <fileset dir="${basedir}/src/main/filtered-resources">
                        <include name="plugin-descriptor.properties"/>
                        <include name="plugin-security.policy"/>
                      </fileset>
                    </copy>

                    <!-- Remove redundant lib in duniter plugin -->
                    <ac:for param="file" xmlns:ac="antlib:net.sf.antcontrib">
                      <path>
                        <fileset dir="${duniter4j.plugin.directory}">
                          <include name="**/*.jar"/>
                        </fileset>
                      </path>
                      <sequential>
                        <local name="filename" />
                        <basename property="filename" file="@{file}"/>
                        <ac:if>
                          <available file="${es.home}/lib/${filename}"/>
                          <then>
                            <!--echo message="Remove lib from plugin: ${filename}"/-->
                            <delete file="${duniter4j.plugin.directory}/${filename}"/>
                          </then>
                        </ac:if>
                      </sequential>
                    </ac:for>
                    <delete>
                      <fileset dir="${duniter4j.plugin.directory}">
                        <include name="guava-*.jar"/>
                      </fileset>
                    </delete>
                    <copy todir="${duniter4j.plugin.directory}">
                      <fileset dir="${project.build.directory}">
                        <include name="${project.artifactId}-${project.version}.${project.packaging}"/>
                      </fileset>
                    </copy>

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>run</id>
                <goals>
                  <goal>exec</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <executable>${es.home}/bin/elasticsearch</executable>
                  <workingDirectory>${es.home}</workingDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <properties>
        <exec.mainClass>${maven.jar.main.class}</exec.mainClass>
        <exec.classpathScope>runtime</exec.classpathScope>
        <duniter4j.log.file>${project.build.directory}/exec.log</duniter4j.log.file>

        <es.home>${project.build.directory}/es-home</es.home>
        <duniter4j.basedir>${es.home}</duniter4j.basedir>
        <duniter4j.plugin.directory>${es.home}/plugins/${project.artifactId}</duniter4j.plugin.directory>
        <es.http.cors.allow-origin>*</es.http.cors.allow-origin>
      </properties>
    </profile>
  </profiles>
</project>
